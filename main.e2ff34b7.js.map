{"version":3,"sources":["scripts/main.js"],"names":["placeColums","buttonPlay","document","querySelector","BASE_CELL_CLASS","score","gameTable","plaseRow","children","map","element","i","k","push","randomInteger","min","max","rand","Math","random","round","firtsValue","arr","a","length","valueA","innerHTML","classList","add","splice","restartMessage","messageList","querySelectorAll","contains","clearCell","cell","remove","updateCell","num","innerText","checkPlace","sumCell","newValue","Number","dataset","value","status","newCell","StateBefore","StateAfter","blanckCell","filter","JSON","stringify","moveCell","line","removeAttribute","addEventListener","e","placePlay","className","boardStateBefore","key","row","reverse","colum"],"mappings":"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","file":"main.e2ff34b7.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst placeColums = [[], [], [], []];\nconst buttonPlay = document.querySelector('.button');\nconst BASE_CELL_CLASS = 'field-cell';\nconst score = document.querySelector('.game-score');\nconst gameTable = document.querySelector('.game-header');\nconst plaseRow = [...document.querySelector('tbody').children]\n  .map(element => [...element.children]);\n\nfor (let i = 0; i < 4; i++) {\n  for (let k = 0; k < 4; k++) {\n    placeColums[k].push(plaseRow[i][k]);\n  }\n}\n\ngameTable.dataset.value = 'off';\n\nfunction randomInteger(min, max) {\n  const rand = min - 0.5 + Math.random() * (max - min + 1);\n\n  return Math.round(rand);\n}\n\nfunction firtsValue(arr) {\n  const a = randomInteger(0, arr.length - 1);\n  const valueA = randomInteger(1, 10) === 10 ? 4 : 2;\n\n  arr[a].innerHTML = `${valueA}`;\n  arr[a].classList.add(`${BASE_CELL_CLASS}--${valueA}`);\n  arr.splice(a, 1);\n}\n\nfunction restartMessage() {\n  const messageList = document.querySelectorAll('.message');\n\n  for (const element of messageList) {\n    if (!element.classList.contains('hidden')) {\n      element.classList.add('hidden');\n    }\n  }\n}\n\nbuttonPlay.addEventListener('click', e => {\n  const placePlay = [...document.querySelectorAll(`.${BASE_CELL_CLASS}`)];\n\n  if (buttonPlay.classList.contains('start')) {\n    buttonPlay.classList.remove('start');\n    buttonPlay.classList.add('restart');\n    restartMessage();\n\n    buttonPlay.innerHTML = `Restart`;\n\n    firtsValue(placePlay);\n    firtsValue(placePlay);\n\n    gameTable.dataset.value = 'on';\n\n    return;\n  }\n\n  if (buttonPlay.classList.contains('restart')) {\n    buttonPlay.classList.remove('restart');\n    buttonPlay.classList.add('start');\n\n    buttonPlay.innerHTML = 'Start';\n\n    for (const element of placePlay) {\n      element.className = BASE_CELL_CLASS;\n\n      element.innerHTML = '';\n    }\n\n    restartMessage();\n\n    gameTable.dataset.value = 'off';\n\n    document.querySelector('.message-start').classList.remove('hidden');\n    score.innerText = '0';\n\n    return;\n  };\n});\n\nfunction clearCell(cell) {\n  cell.classList.remove(cell.classList[1]);\n  cell.innerHTML = '';\n}\n\nfunction updateCell(cell, num) {\n  clearCell(cell);\n  cell.classList.add(`${BASE_CELL_CLASS}--${num}`);\n  cell.innerText = `${num}`;\n}\n\nfunction checkPlace(arr) {\n  for (const element of arr) {\n    for (let i = 2; i >= 0; i--) {\n      if (element[i + 1].innerText === element[i].innerText\n          && element[i].innerText !== '') {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction sumCell(arr) {\n  for (let i = 2; i >= 0; i--) {\n    if (arr[i + 1].innerText === arr[i].innerText && arr[i].innerText !== '') {\n      const newValue = Number(arr[i].innerText) * 2;\n\n      if (newValue === 2048) {\n        gameTable.dataset.value = 'off';\n        document.querySelector('.message-win').classList.remove('hidden');\n      }\n\n      score.innerText = `${Number(score.innerText) + newValue}`;\n\n      clearCell(arr[i]);\n      updateCell(arr[i + 1], newValue);\n\n      arr[i].dataset.status = 'block';\n    }\n  }\n}\n\nfunction newCell(StateBefore, StateAfter) {\n  const blanckCell = [...document.querySelectorAll('td')]\n    .filter(element => element.classList.length === 1);\n\n  if (blanckCell.length === 0) {\n    if (!checkPlace(placeColums) && !checkPlace(plaseRow)) {\n      document.querySelector('.message-lose').classList.remove('hidden');\n    }\n\n    return;\n  }\n\n  if (JSON.stringify(StateBefore) === JSON.stringify(StateAfter)) {\n    return;\n  }\n\n  firtsValue(blanckCell);\n}\n\nfunction moveCell(line) {\n  for (let i = 3; i >= 0; i--) {\n    if (line[i].innerText) {\n      for (let k = i + 1; k < line.length; k++) {\n        if (!line[k].innerText) {\n          const value = line[k - 1].innerText;\n\n          clearCell(line[k - 1]);\n          updateCell(line[k], value);\n        }\n      }\n    }\n  }\n\n  sumCell(line);\n\n  if (document.querySelector('[data-status]')) {\n    document.querySelector('[data-status]').removeAttribute('data-status');\n  }\n}\n\naddEventListener('keydown', e => {\n  if (gameTable.dataset.value === 'on') {\n    let boardStateBefore = [];\n    let boardStateAfter = [];\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        boardStateBefore = plaseRow.map(row => row.map(cell => cell.innerText));\n\n        for (const row of plaseRow) {\n          moveCell([...row].reverse());\n        };\n\n        boardStateAfter = plaseRow.map(row => row.map(cell => cell.innerText));\n\n        newCell(boardStateBefore, boardStateAfter);\n        break;\n\n      case 'ArrowRight':\n        boardStateBefore = plaseRow.map(row => row.map(cell => cell.innerText));\n\n        for (const row of plaseRow) {\n          moveCell(row);\n        };\n\n        boardStateAfter = plaseRow.map(row => row.map(cell => cell.innerText));\n\n        newCell(boardStateBefore, boardStateAfter);\n        break;\n\n      case 'ArrowUp':\n        boardStateBefore = placeColums\n          .map(colum => colum.map(cell => cell.innerText));\n\n        for (const column of placeColums) {\n          moveCell([...column].reverse());\n        };\n\n        boardStateAfter = placeColums\n          .map(colum => colum.map(cell => cell.innerText));\n\n        newCell(boardStateBefore, boardStateAfter);\n        break;\n\n      case 'ArrowDown':\n        boardStateBefore = placeColums\n          .map(colum => colum.map(cell => cell.innerText));\n\n        for (const column of placeColums) {\n          moveCell(column);\n        };\n\n        boardStateAfter = placeColums\n          .map(colum => colum.map(cell => cell.innerText));\n\n        newCell(boardStateBefore, boardStateAfter);\n        break;\n\n      default:\n        break;\n    }\n  }\n});\n"]}